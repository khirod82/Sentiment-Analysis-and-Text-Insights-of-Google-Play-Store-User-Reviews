# -*- coding: utf-8 -*-
"""Python.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lAIjsuWfGSXhXhiNkXWINHgdgV-TIYc2
"""

import pandas as pd
df = pd.read_csv('/content/googleplaystore_user_reviews.csv')
df.head()

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from wordcloud import WordCloud
from collections import Counter
import re

# Basic statistics about the dataset
print(df.describe())
print(df.info())

# Handling missing values
df = df.dropna()

# Exploratory Data Analysis (EDA)
# Sentiment distribution
sentiment_counts = df['Sentiment'].value_counts()
print(sentiment_counts)

# Visualize sentiment distribution
plt.figure(figsize=(4, 3))
sns.countplot(x='Sentiment', data=df)
plt.title('Sentiment Distribution')
plt.show()

# Sentiment Polarity and Subjectivity distribution
plt.figure(figsize=(12, 5))

plt.subplot(1, 2, 1)
sns.histplot(df['Sentiment_Polarity'], bins=30, kde=True)
plt.title('Sentiment Polarity Distribution')

plt.subplot(1, 2, 2)
sns.histplot(df['Sentiment_Subjectivity'], bins=30, kde=True)
plt.title('Sentiment Subjectivity Distribution')
plt.show()

# Text Cleaning for WordCloud
def clean_text(text):
    text = re.sub(r'\W+', ' ', text)
    text = text.lower()
    return text
df['cleaned_review'] = df['Translated_Review'].apply(clean_text)

# WordCloud for positive reviews
positive_reviews = ' '.join(df[df['Sentiment'] == 'Positive']['cleaned_review'])
wordcloud = WordCloud(width=800, height=400, background_color='white').generate(positive_reviews)

plt.figure(figsize=(10, 5))
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis('off')
plt.title('WordCloud for Positive Reviews')
plt.show()

# WordCloud for negative reviews
negative_reviews = ' '.join(df[df['Sentiment'] == 'Negative']['cleaned_review'])
wordcloud = WordCloud(width=800, height=400, background_color='white').generate(negative_reviews)

plt.figure(figsize=(10, 5))
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis('off')
plt.title('WordCloud for Negative Reviews')
plt.show()

# Common words in reviews
all_reviews = ' '.join(df['cleaned_review'])
word_counts = Counter(all_reviews.split())
common_words = word_counts.most_common(10)
print("Most common words:", common_words)

# Average polarity and subjectivity for each sentiment
avg_polarity = df.groupby('Sentiment')['Sentiment_Polarity'].mean()
avg_subjectivity = df.groupby('Sentiment')['Sentiment_Subjectivity'].mean()
print("Average Polarity by Sentiment:", avg_polarity)
print("Average Subjectivity by Sentiment:", avg_subjectivity)